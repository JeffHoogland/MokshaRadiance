group { name: "elm/panel/left/default";
   
   images.image: "win_glow.png" COMP;
   images.image: "img/arrow.png" COMP;
   images.image: "img/arrow_left.png" COMP;
   images.image: "img/arrow_up.png" COMP;
   images.image: "img/arrow_down.png" COMP;
   
   data.item: "focus_highlight" "on";
   
   parts {
      
      part { name: "all"; type: SPACER;
         description { state: "default" 0.0;
         }
      }
      part { name: "base"; type: RECT;
         description { state: "default" 0.0;
            rel1.to_x: "all";
            rel2.to_x: "elm.swallow.event";
            rel2.relative: 0.0 1.0;
            rel2.offset: -4 -1;
            color_class: "dialog_base";
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 4 4;
            rel1.to: "base";
            rel2.offset: -5 -5;
            rel2.to: "base";
         }
      }
      part { name: "elm.swallow.event"; type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 20 20;
            max: 20 20;
            align: 1.0 0.5;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            color: 0 0 0 0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            align: 0.0 0.5;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
         }
      }
      part { name: "btn"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.event";
            rel2.to: "elm.swallow.event";
            color: 0 0 0 0;
         }
      }
      part { name: "icn"; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            FIXED_SIZE(5,7)
            STAY_ON("btn")
            color_class: "label_text";
            image.normal: "img/arrow_left.png";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            image.normal: "img/arrow.png";
         }
      }
   }
   programs {
      program {
         signal: "mouse,clicked,1"; source: "btn";
         action: SIGNAL_EMIT "elm,action,panel,toggle" "elm";
      }
      program {
         signal: "elm,action,show"; source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.3;
         target: "elm.swallow.event";
         target: "base";
         target: "icn";
      }
      program {
         signal: "elm,action,hide"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         transition: ACCELERATE 0.3;
         target: "elm.swallow.event";
         target: "icn";
      }
      program { name: "hide1";
         signal: "elm,action,hide"; source: "elm";
         script {
            new x, y, w, h;
            
            custom_state(PART:"base", "default", 0.0);
            set_state_val(PART:"base", STATE_REL1, -1.0, 0.0);
            get_geometry(PART:"elm.swallow.event", x, y, w, h);
            set_state_val(PART:"base", STATE_REL1_OFFSET, w, 0);
         }
         after: "hide2";
      }
      program { name: "hide2";
         action: STATE_SET "custom" 0.0;
         transition: ACCELERATE 0.3;
         target: "base";
      }
   }
}

group { name: "elm/panel/right/default";
   inherit: "elm/panel/left/default";
   parts {
      part { name: "base";
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.event";
            rel1.offset: 3 0;
            rel2.relative: 1.0 1.0;
            rel2.to_x: "all";
            rel2.offset: -1 -1;
         }
      }
      part { name: "elm.swallow.event";
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
         }
         description { state: "hidden" 0.0;
            align: 1.0 0.5;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "icn";
         description { state: "default" 0.0;
            image.normal: "img/arrow.png";
         }
         description { state: "hidden" 0.0;
            image.normal: "img/arrow_left.png";
         }
      }
   }
   programs {
      program { name: "hide1";
         script {
            new x, y, w, h;
            
            custom_state(PART:"base", "default", 0.0);
            set_state_val(PART:"base", STATE_REL1, 1.0, 0.0);
            set_state_val(PART:"base", STATE_REL2, 2.0, 1.0);
            get_geometry(PART:"elm.swallow.event", x, y, w, h);
            set_state_val(PART:"base", STATE_REL2_OFFSET, -w, 0);
         }
      }
   }
}

group { name: "elm/panel/top/default";
   inherit: "elm/panel/left/default";
   parts {
      part { name: "base";
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel1.to_x: "all";
            rel1.to_y: "all";
            rel1.offset: 0 0;
            rel2.relative: 1.0 0.0;
            rel2.to_x: "all";
            rel2.to_y: "elm.swallow.event";
            rel2.offset: -1 -4;
         }
      }
      part { name: "elm.swallow.event";
         description { state: "default" 0.0;
            align: 0.5 1.0;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 1.0;
         }
         description { state: "hidden" 0.0;
            align: 0.5 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
         }
      }
      part { name: "icn";
         description { state: "default" 0.0;
			FIXED_SIZE(7,5)
            image.normal: "img/arrow_up.png";
         }
         description { state: "hidden" 0.0;
			FIXED_SIZE(7,5)
            image.normal: "img/arrow_down.png";
         }
      }
   }
   programs {
      program { name: "hide1";
         script {
            new x, y, w, h;
            
            custom_state(PART:"base", "default", 0.0);
            set_state_val(PART:"base", STATE_REL1, 0.0, -1.0);
            set_state_val(PART:"base", STATE_REL2, 1.0, 0.0);
            get_geometry(PART:"elm.swallow.event", x, y, w, h);
            set_state_val(PART:"base", STATE_REL1_OFFSET, 0, h);
         }
      }
   }
}

group { name: "elm/panel/bottom/default";
   inherit: "elm/panel/left/default";
   parts {
      part { name: "base";
         description { state: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel1.to_x: "all";
            rel1.to_y: "elm.swallow.event";
            rel1.offset: 0 3;
            rel2.relative: 1.0 1.0;
            rel2.to_x: "all";
            rel2.to_y: "all";
            rel2.offset: -1 -1;
         }
      }
      part { name: "elm.swallow.event";
         description { state: "default" 0.0;
            align: 0.5 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
         }
         description { state: "hidden" 0.0;
            align: 0.5 1.0;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "icn";
         description { state: "default" 0.0;
			FIXED_SIZE(7,5)
            image.normal: "img/arrow_down.png";
         }
         description { state: "hidden" 0.0;
			FIXED_SIZE(7,5)
            image.normal: "img/arrow_up.png";
         }
      }
   }
   programs {
      program { name: "hide1";
         script {
            new x, y, w, h;
            
            custom_state(PART:"base", "default", 0.0);
            set_state_val(PART:"base", STATE_REL1, 0.0, 1.0);
            set_state_val(PART:"base", STATE_REL2, 1.0, 2.0);
            get_geometry(PART:"elm.swallow.event", x, y, w, h);
            set_state_val(PART:"base", STATE_REL2_OFFSET, 0, -h);
         }
      }
   }
}
